给定一个二叉树，找出其最小深度。

最小深度是从根节点到最近叶子节点的最短路径上的节点数量。

说明: 叶子节点是指没有子节点的节点。

示例:

给定二叉树 [3,9,20,null,null,15,7],

3
   / \
  9  20
    /  \
   15   7
返回它的最小深度  2.

来源：力扣（LeetCode） 链接：https://leetcode-cn.com/problems/minimum-depth-of-binary-tree 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */
/**
    所求为跟根节点到叶子结点的连线和，其实结束条件就是该结点为叶子结点
    叶子结点就是它没有子节点（一个也没有）
*/

int minDepth(struct TreeNode* root)
{
    if(root == NULL) return;
    if(root->left == NULL&&root->right == NULL) return 1;
    if(root->left == NULL) return minDepth(root->right)+1;
    if(root->right == NULL) return minDepth(root->left)+1;
    
    int leftDepth = 0,rightDepth = 0;
        leftDepth = minDepth(root->left) ;
        rightDepth = minDepth(root->right);
    return  (rightDepth < leftDepth ? rightDepth : leftDepth )+1;
}