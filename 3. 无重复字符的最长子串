3. 无重复字符的最长子串
给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。

示例 1:

输入: "abcabcbb"
输出: 3 
解释: 因为无重复字符的最长子串是 "abc"，所以其长度为 3。
示例 2:

输入: "bbbbb"
输出: 1
解释: 因为无重复字符的最长子串是 "b"，所以其长度为 1。
示例 3:

输入: "pwwkew"
输出: 3
解释: 因为无重复字符的最长子串是 "wke"，所以其长度为 3。
     请注意，你的答案必须是 子串 的长度，"pwke" 是一个子序列，不是子串。
     
     
class Solution {
public:
    //i 起始位置 返回无重复个数
    int func(int i,const string& s)
    {
        int num[256] = {0};//计数重复
        int sum = 0;
        while(i < s.size() && num[s[i]] < 1)
        {
            num[s[i++]]++;
            sum++;
        }
        return sum;
    }
    int lengthOfLongestSubstring(string s) {
        
        int i = 0;//遍历s
        int max = 0;
        int sum = 0;
        while (i < s.size())
        {
            sum = func(i,s);
            if(sum > max)
                max = sum;
            i++;
        }
        return max;
    }
};
