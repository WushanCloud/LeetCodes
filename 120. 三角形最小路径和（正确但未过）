120. 三角形最小路径和
给定一个三角形，找出自顶向下的最小路径和。每一步只能移动到下一行中相邻的结点上。

例如，给定三角形：

[
     [2],
    [3,4],
   [6,5,7],
  [4,1,8,3]
]
自顶向下的最小路径和为 11（即，2 + 3 + 5 + 1 = 11）。

说明：

如果你可以只使用 O(n) 的额外空间（n 为三角形的总行数）来解决这个问题，那么你的算法会很加分。


class Solution {
public:
    //时间复杂度和空间复杂度高
    //三角形，目前和，第i行，第j个，答案
    void miniSum(vector<vector<int>>& triangle, int sum, int i, int j, int& ans)
    {
        if (i == triangle.size())
        {
            if (ans > sum)
                ans = sum;
        }
        else
        {
            int num = sum;//目前的值
            for (int m = j; m < j + 2 && m < triangle[i].size(); m++)
            {
                miniSum(triangle, num + triangle[i][m], i + 1, m, ans);
            }
        }
    }

    int minimumTotal(vector<vector<int>>& triangle) {
        int ans = INT_MAX;
        miniSum(triangle, 0, 0, 0, ans);
        return ans;
    }
};
