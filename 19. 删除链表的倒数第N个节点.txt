给定一个链表，删除链表的倒数第 n 个节点，并且返回链表的头结点。

示例：

给定一个链表: 1->2->3->4->5, 和 n = 2.

当删除了倒数第二个节点后，链表变为 1->2->3->5. 说明：

给定的 n 保证是有效的。

进阶：

你能尝试使用一趟扫描实现吗？

来源：力扣（LeetCode） 链接：https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

/*用快慢指针，快指针先走n步，判断快指针的下一步是否为空，不为空，删除慢指针的下一个，如果快指针为空，则表示删除的是头结点*/
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */

typedef struct ListNode Node; 
struct ListNode* removeNthFromEnd(struct ListNode* head, int n){
    if(head->next == NULL) return NULL;
    Node * pre = head;
    Node * del = head;
    Node * cur = head;
    while(n--)
    {
        cur = cur->next;
    }
    while(cur && cur->next)
    {
        cur = cur->next;
        pre = pre->next;
    }
    if(cur == NULL)
    {
        head = head->next;
    }
    else
    {
        del = pre->next;
        pre->next = del->next;
        free(del);
    }
    
    return head;
}