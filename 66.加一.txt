给定一个由整数组成的非空数组所表示的非负整数，在该数的基础上加一。

最高位数字存放在数组的首位， 数组中每个元素只存储单个数字。

你可以假设除了整数 0 之外，这个整数不会以零开头。

示例 1:

输入: [1,2,3] 输出: [1,2,4] 解释: 输入数组表示数字 123。 示例 2:

输入: [4,3,2,1] 输出: [4,3,2,2] 解释: 输入数组表示数字 4321。

来源：力扣（LeetCode） 链接：https://leetcode-cn.com/problems/plus-one 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* plusOne(int* digits, int digitsSize, int* returnSize){
    int i = 1;//计算倒数第几位
    digits[digitsSize-i]+=1;
    while(digits[digitsSize-i] == 10 && i != digitsSize)
    {
        digits[digitsSize-i] = 0;
        i++;
        digits[digitsSize-i]+=1;
    }
    if(digits[0] == 10)
    {
        *returnSize = digitsSize+1;
        int * num = (int * ) malloc(sizeof(int ) * (digitsSize+1));
        num[0] = 1;
        while(digitsSize)//i = digitsSize
        {
            num[digitsSize] = 0;
            digitsSize--;
        }
        return num;
    }
    else
    {
        *returnSize = digitsSize;
    }
    return digits;
}