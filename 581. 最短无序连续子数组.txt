
581. 最短无序连续子数组
给定一个整数数组，你需要寻找一个连续的子数组，如果对这个子数组进行升序排序，那么整个数组都会变为升序排序。

你找到的子数组应是最短的，请输出它的长度。

示例 1:

输入: [2, 6, 4, 8, 10, 9, 15]
输出: 5
解释: 你只需要对 [6, 4, 8, 10, 9] 进行升序排序，那么整个表都会变为升序排序。
说明 :

输入的数组长度范围在 [1, 10,000]。
输入的数组可能包含重复元素 ，所以升序的意思是<=。







int findUnsortedSubarray(int* nums, int numsSize){

//左边找小的，符合就继续找
int flag=0;int i=0;
for(;i<numsSize-1;i++)
{
    for(int j=i+1;j<numsSize;j++)
    {
        if(nums[i]>nums[j])
        {
           flag=1;
        }
    }
    if(flag==1)
    break;
}
//此时i就是左边要交换的
int left=i;flag=0;
   for(i=numsSize-1;i>0;i--)
{
    for(int j=i-1;j>=0;j--)
    {
        if(nums[i]<nums[j])
        {
           flag=1;
        }
    }
    if(flag==1)
    break;
} 
int right=i;
if(right<=left) return 0;
return right-left+1;
}
