判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。

示例 1:

输入: 121
输出: true
示例 2:

输入: -121
输出: false
解释: 从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。
示例 3:

输入: 10
输出: false
解释: 从右向左读, 为 01 。因此它不是一个回文数。
进阶:

你能不将整数转为字符串来解决这个问题吗？

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/palindrome-number
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\
解法一：

```c
bool isPalindrome(int x){
    if(x == 0) return true;//0是回文数，
    if(x < 0 || x%10 == 0) return false;//但最后一位为0，不为回文数。两句判断提升效率
    
    long src = (long)x,val = 0;//进行整型提升，防止倒过来的数超出int 最大范围；
    while (x) 
    {
        val = val*10 + x%10;
        x /=10;
    }
    if(src == val) return true;
    else return false;
}

```
解法二：

```c
if(x < 0 || x %10 == 0 && x != 0) return false;

    int val = 0;
    while (x > val)
    {
        val = val * 10 + x % 10;
        x/= 10;
    }
    if( x == val || x == val / 10) return true;
    else return false;
```
